version: '3.1'
services:
  # ---------------------------------------------------
  # RABBITMQ
  # ---------------------------------------------------
  rabbitmq:
    image: "rabbitmq:3-management"
    networks: 
      lb4_network: 
        ipv4_address: '192.168.17.4'
    ports:
      - '5672:5672'
      - '15672:15672'
  # ---------------------------------------------------
  # CLIENT
  # ---------------------------------------------------
  client:
    build: ./flask_app
    volumes:
      - './flask_app/client:/app'        
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
      SERVICE_NAME: 'client'
      SERVICE_ID: 'client'
      CONSUL_HOST: '${CONSUL_IP}'
      PORT: 13000
      PYTHONUNBUFFERED: 1
    restart: on-failure
  # ---------------------------------------------------
  # DELIVERY
  # ---------------------------------------------------
  delivery:
    build: ./flask_app
    ports:
      - '${DELIVERY_PORT}:${GUNICORN_PORT}'
    volumes:
      - './flask_app/delivery:/app'
    networks: 
      lb4_network: 
        ipv4_address: '${DELIVERY_IP}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      # SQLALCHEMY_DATABASE_URI: 'mysql+mysqlconnector://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MYSQL_PORT}/${MYSQL_DATABASE}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: on-failure
  # ---------------------------------------------------
  # MACHINE
  # ---------------------------------------------------
  machine:
    build: ./flask_app
    ports:
      - '${MACHINE_PORT}:${GUNICORN_PORT}'
    volumes:
      - './flask_app/machine:/app'
    networks: 
      lb4_network: 
        ipv4_address: '${MACHINE_IP}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      # SQLALCHEMY_DATABASE_URI: 'mysql+mysqlconnector://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MYSQL_PORT}/${MYSQL_DATABASE}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: on-failure
  # ---------------------------------------------------
  # ORDER
  # ---------------------------------------------------
  order:
    build: ./flask_app
    ports:
      - '${ORDER_PORT}:${GUNICORN_PORT}'
    volumes:
      - './flask_app/order:/app'
    networks: 
      lb4_network: 
        ipv4_address: '${ORDER_IP}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      # SQLALCHEMY_DATABASE_URI: 'mysql+mysqlconnector://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MYSQL_PORT}/${MYSQL_DATABASE}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: on-failure
  # ---------------------------------------------------
  # PAYMENT
  # ---------------------------------------------------
  payment:
    build: ./flask_app
    ports:
      - '${PAYMENT_PORT}:${GUNICORN_PORT}'
    volumes:
      - './flask_app/payment:/app'
    networks: 
      lb4_network: 
        ipv4_address: '${PAYMENT_IP}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      # SQLALCHEMY_DATABASE_URI: 'mysql+mysqlconnector://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MYSQL_PORT}/${MYSQL_DATABASE}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: on-failure
  # ---------------------------------------------------
  # LOGGER
  # ---------------------------------------------------
  logger:
    build: ./flask_app
    ports:
      - '${LOGGER_PORT}:${GUNICORN_PORT}'
    volumes:
      - './flask_app/logger:/app'
    networks: 
      lb4_network: 
        ipv4_address: '${LOGGER_IP}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      # SQLALCHEMY_DATABASE_URI: 'mysql+mysqlconnector://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MYSQL_PORT}/${MYSQL_DATABASE}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    restart: on-failure
  # ---------------------------------------------------
  # HAPROXY
  # ---------------------------------------------------
  haproxy:
    build: ./flask_app/haproxy
    ports:
      - '${HAPROXY_PORT}:${HAPROXY_PORT}'
      - '${HAPROXY_STATS_PORT}:${HAPROXY_STATS_PORT}'
    expose:
      - '${HAPROXY_PORT}'
      - '${HAPROXY_STATS_PORT}'
    volumes:
      - ./flask_app/haproxy/aas_ssl_cert.pem:/usr/local/etc/haproxy/aas_ssl_cert.pem
    networks:
      lb4_network:
        ipv4_address: '${HAPROXY_IP}'
    environment:
      - 'CLIENT_IP=${CLIENT_IP}'
      - 'CLIENT_PORT=${GUNICORN_PORT}'
      - 'DELIVERY_IP=${DELIVERY_IP}'
      - 'DELIVERY_PORT=${GUNICORN_PORT}'
      - 'ORDER_IP=${ORDER_IP}'
      - 'ORDER_PORT=${GUNICORN_PORT}'
      - 'MACHINE_IP=${MACHINE_IP}'
      - 'MACHINE_PORT=${GUNICORN_PORT}'
      - 'PAYMENT_IP=${PAYMENT_IP}'
      - 'PAYMENT_PORT=${GUNICORN_PORT}'
      - 'LOGGER_IP=${LOGGER_IP}'
      - 'LOGGER_PORT=${GUNICORN_PORT}'
      - 'HAPROXY_PORT=${HAPROXY_PORT}'
      - 'HAPROXY_STATS_PORT=${HAPROXY_STATS_PORT}'
    restart: unless-stopped
  # ---------------------------------------------------
  # CONSUL
  # ---------------------------------------------------
  consul:
      image: 'consul:latest'
      ports:
        - '8300:8300'
        - '8301:8301'
        - '8301:8301/udp'
        - '8500:8500'
        - '8600:8600'
        - '8600:8600/udp'
      networks:
        lb4_network:
          ipv4_address: '${CONSUL_IP}'
networks:
  lb4_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: '${NETWORK_SUBNET}'

